// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // 00 = RAM16K - (Not (Or a b)) / default
    // 10 = Screen - (Xor a b)
    // 11 = Keyboard (And a b)

    Or(a=address[0], b=address[1], out=orRam);
    Not(in=orRam, out=isRam);

    Xor(a=address[0], b=address[1], out=isScreen);

    And(a=address[0], b=address[1], out=isKeyboard);

    And(a=isRam, b=load, out=loadRam);
    And(a=isScreen, b=load, out=loadScreen);
    And(a=isKeyboard, b=load, out=loadKeyboard);

    RAM16K(in=in, load=loadRam, out=outRam, address=address[1..14]);
    Screen(in=in, load=loadScreen, out=outScreen, address=address[2..14]);
    Keyboard(out=outKeyboard);

    Mux16(a=outRam, b=outScreen, sel=isScreen, out=tempOut);
    Mux16(a=tempOut, b=outKeyboard, sel=isKeyboard, out=out);
}
